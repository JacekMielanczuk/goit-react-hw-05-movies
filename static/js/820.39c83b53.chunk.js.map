{"version":3,"file":"static/js/820.39c83b53.chunk.js","mappings":"0KAEMA,EAAU,mCAIVC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAHe,6BAIfC,QAAS,CAAE,eAAgB,oBAC3BC,OAAQ,CACNC,QAASN,EACTO,SAAU,WAIDC,EAAU,SAAAC,GACrB,IACE,OAAOR,EAASS,IAAT,WAAiBD,GAGzB,CAFC,MAAOE,GACPC,QAAQC,IAAIF,EACb,CACF,EAED,K,qIC2BA,EA7CiB,WAAO,IAAD,EACrB,GAAwBG,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaV,IAAI,gBAApB,QAAgC,GACrCa,EAAU,gCAA4BD,EAA5B,iBAA0CP,EAA1C,wBAgBhB,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOU,EAAP,KAAeC,EAAf,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACa,KAAjBJ,EAAMK,SAIVnB,EAAAA,EAAAA,GAAQe,GACLK,MAAK,SAAAC,GACJ,MAAuCA,EAASC,KAAxCf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,YACvBP,GAAU,SAAAQ,GAAS,wBAAQA,IAAR,OAAsBF,GAAtB,IACnBf,EAAQD,GACJiB,EAAcjB,GAChBG,GAAW,EAEd,IACAgB,OAAM,SAAAvB,GACLC,QAAQC,IAAIF,EAAMwB,QACnB,GACJ,GAAE,CAACZ,EAAYD,EAAOP,IAEhB,CAACS,EAnCa,SAAAY,GACnBA,EAAMC,iBACN,IAAMC,EAAaF,EAAMG,cAAcC,SAASC,MAAMC,MAEtD,IAAKJ,EACH,OAAOjB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOgB,GAC1B,EA2B6BrB,EAzBP,WACrBD,GAAQ,SAAA2B,GAAI,OAAIA,EAAO,CAAX,GACb,EAwBF,EC/CD,EAAuB,yBAAvB,EAAyD,2BAAzD,EAA4F,0B,SC8C5F,EA1CmB,WACjB,MAAwDC,IAAxD,eAAOpB,EAAP,KAAeqB,EAAf,KAA6B5B,EAA7B,KAAsC6B,EAAtC,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,kBAAMC,UAAWC,EAAUC,SAAUN,EAArC,WACE,mBAAQI,UAAWC,EAAYE,KAAK,SAApC,UACE,SAAC,MAAD,CAAUC,KAAK,YAGjB,kBACEJ,UAAWC,EACXI,KAAK,QACLF,KAAK,OACLG,aAAa,MACbC,WAAS,EACTC,YAAY,iCAGhB,wBACGjC,EAAOkC,OAAS,GACflC,EAAOmC,KAAI,SAAAC,GACT,IAAQC,EAAuBD,EAAvBC,eAAgBC,EAAOF,EAAPE,GACxB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMlB,GAAlC,UACE,0BAAOc,OAFFC,EAMZ,MAEJ7C,IACC,mBAAQmC,KAAK,SAASc,QAASpB,EAA/B,yBAMP,C","sources":["api/Api.js","hooks/useMovies.js","webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bd1f74544935b756e43565ea50ae79a5';\n\nconst BASE_URL = 'https://api.themoviedb.org';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  headers: { 'Content-Type': 'application/json' },\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nexport const getData = url => {\n  try {\n    return instance.get(`/${url}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default API_KEY;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getData } from '../api/Api';\n\nconst useMovie = () => {\n  const [page, setPage] = useState(1);\n  const [moreBtn, setMoreBtn] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const MOVIES_URL = `3/search/movie?&query=${query}&page=${page}&include_adult=false`;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const inputQuery = event.currentTarget.elements.input.value;\n\n    if (!inputQuery) {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: inputQuery });\n  };\n\n  const handleLoadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (query.trim() === '') {\n      return;\n    }\n\n    getData(MOVIES_URL)\n      .then(response => {\n        const { page, results, total_pages } = response.data;\n        setMovies(prevState => [...prevState, ...results]);\n        setPage(page);\n        if (total_pages > page) {\n          setMoreBtn(true);\n        }\n      })\n      .catch(error => {\n        console.log(error.message);\n      });\n  }, [MOVIES_URL, query, page]);\n\n  return [movies, handleSubmit, moreBtn, handleLoadMore];\n};\n\nexport default useMovie;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__2deBf\",\"button\":\"MoviesPage_button__AUtxX\",\"input\":\"MoviesPage_input__16dJ5\"};","import { useLocation, Link } from 'react-router-dom';\nimport { BiSearch } from 'react-icons/bi';\nimport useMovies from '../../hooks/useMovies';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, handleSubmit, moreBtn, handleLoadMore] = useMovies();\n  const location = useLocation();\n\n  return (\n    <>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <button className={css.button} type=\"submit\">\n          <BiSearch size=\"20px\" />\n        </button>\n\n        <input\n          className={css.input}\n          name=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n      <ul>\n        {movies.length > 0 &&\n          movies.map(movie => {\n            const { original_title, id } = movie;\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  <span>{original_title}</span>\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n      {moreBtn && (\n        <button type=\"button\" onClick={handleLoadMore}>\n          Load More\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["API_KEY","instance","axios","baseURL","headers","params","api_key","language","getData","url","get","error","console","log","useState","page","setPage","moreBtn","setMoreBtn","useSearchParams","searchParams","setSearchParams","query","MOVIES_URL","movies","setMovies","useEffect","trim","then","response","data","results","total_pages","prevState","catch","message","event","preventDefault","inputQuery","currentTarget","elements","input","value","prev","useMovies","handleSubmit","handleLoadMore","location","useLocation","className","css","onSubmit","type","size","name","autoComplete","autoFocus","placeholder","length","map","movie","original_title","id","to","state","from","onClick"],"sourceRoot":""}